version: "3.8"
services:
  mongodb:
    image: "mongo"
    container_name: mongo
    volumes:
      - data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: my_db
    ports:
      - "27017:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/myapp --quiet
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 10s
  api:
    build: ./server/hr
    container_name: hc_api
    environment:
      HTTP_LISTEN_ADDRESS: 5000
      JWT_SECRET: secretsecretsecretsecretsecretsecretsecretsecret
      MONGO_DB_NAME: hotel-reservation
      MONGO_DB_URI: mongodb://root:password@mongodb/?authSource=admin
      MONGO_DB_NAME_TEST: hotel-reservation-test
      MONGO_DB_URI_TEST: mongodb://root:password@mongodb/?authSource=admin
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.3
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-server:7.5.3
    hostname: kafka
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: "true"
      CONFLUENT_SUPPORT_CUSTOMER_ID: "anonymous"
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
      - 9090:9090
    volumes:
      - ./server/tc/.config/prometheus.yml:/etc/prometheus/prometheus.yml
    extra_hosts:
      - "host.docker.internal:host-gateway"
  grafana:
    image: grafana/grafana-enterprise
    container_name: grafana
    restart: unless-stopped
    ports:
      - '3000:3000'
    volumes:
      - grafana-storage:/var/lib/grafana
#   obu:
#     build: ./server/tc/obu
#     container_name: obu_api
#     depends_on:
#       - data_receiver
#   data_receiver:
#     build: ./server/tc/data_receiver
#     container_name: data_receiver_api
#     ports:
#       - "30000:30000"
#     depends_on:
#       - kafka
#   distance_calculator:
#     build: ./server/tc/distance_calculator
#     container_name: distance_calculator_api
#     depends_on:
#       - kafka
#   data_aggregator:
#     build: ./server/tc/data_aggregator
#     container_name: data_aggregator_api
#     depends_on:
#       - kafka

volumes:
  grafana-storage: {}
  data:
  logs:
